{"version":3,"file":"index48.js","sources":["../../src/langchain/tools/hts/mint-nft-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport { MintNFTParams } from '../../../types';\nimport {\n  BaseHederaTransactionTool,\n  BaseHederaTransactionToolParams,\n} from '../common/base-hedera-transaction-tool';\nimport { BaseServiceBuilder } from '../../../builders';\nimport { HtsBuilder } from '../../../builders';\nimport { Buffer } from \"buffer\";\n\nconst MintNFTZodSchemaCore = z.object({\n  tokenId: z\n    .string()\n    .describe('The ID of the NFT collection (e.g., \"0.0.xxxx\").'),\n  metadata: z\n    .array(z.string())\n    .describe(\n      'Array of metadata for each NFT. Strings are treated as UTF-8, or base64 for binary. Builder handles decoding & validation.'\n    ),\n  batchSize: z\n    .number()\n    .int()\n    .positive()\n    .optional()\n    .describe(\n      'Optional. Max NFTs per transaction if chunking. Builder handles default/limits.'\n    ),\n});\n\nexport class HederaMintNftTool extends BaseHederaTransactionTool<\n  typeof MintNFTZodSchemaCore\n> {\n  name = 'hedera-hts-mint-nft';\n  description =\n    'Mints new Non-Fungible Tokens (NFTs). Builder handles metadata decoding and batching.';\n  specificInputSchema = MintNFTZodSchemaCore;\n  namespace = 'hts';\n\n  constructor(params: BaseHederaTransactionToolParams) {\n    super(params);\n  }\n\n  protected getServiceBuilder(): BaseServiceBuilder {\n    return this.hederaKit.hts();\n  }\n\n  protected async callBuilderMethod(\n    builder: BaseServiceBuilder,\n    specificArgs: z.infer<typeof MintNFTZodSchemaCore>\n  ): Promise<void> {\n    await (builder as HtsBuilder).mintNonFungibleToken(\n      specificArgs as unknown as MintNFTParams\n    );\n  }\n}\n"],"names":[],"mappings":";;AAUA,MAAM,uBAAuB,EAAE,OAAO;AAAA,EACpC,SAAS,EACN,SACA,SAAS,kDAAkD;AAAA,EAC9D,UAAU,EACP,MAAM,EAAE,OAAA,CAAQ,EAChB;AAAA,IACC;AAAA,EAAA;AAAA,EAEJ,WAAW,EACR,SACA,MACA,SAAA,EACA,SAAA,EACA;AAAA,IACC;AAAA,EAAA;AAEN,CAAC;AAEM,MAAM,0BAA0B,0BAErC;AAAA,EAOA,YAAY,QAAyC;AACnD,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMF,oBAAwC;AAChD,WAAO,KAAK,UAAU,IAAA;AAAA,EAAI;AAAA,EAG5B,MAAgB,kBACd,SACA,cACe;AACf,UAAO,QAAuB;AAAA,MAC5B;AAAA,IAAA;AAAA,EACF;AAEJ;"}