{"version":3,"file":"index44.js","sources":["../../src/langchain/tools/hts/freeze-token-account-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport { FreezeTokenAccountParams } from '../../../types';\nimport {\n  BaseHederaTransactionTool,\n  BaseHederaTransactionToolParams,\n} from '../common/base-hedera-transaction-tool';\nimport { BaseServiceBuilder } from '../../../builders/base-service-builder';\nimport { HtsBuilder } from '../../../builders/hts/hts-builder';\n\nconst FreezeTokenAccountZodSchemaCore = z.object({\n  tokenId: z.string().describe('The ID of the token (e.g., \"0.0.xxxx\").'),\n  accountId: z\n    .string()\n    .describe('The account ID to be frozen for the token (e.g., \"0.0.yyyy\").'),\n});\n\nexport class HederaFreezeTokenAccountTool extends BaseHederaTransactionTool<\n  typeof FreezeTokenAccountZodSchemaCore\n> {\n  name = 'hedera-hts-freeze-token-account';\n  description = 'Freezes an account for a specific token.';\n  specificInputSchema = FreezeTokenAccountZodSchemaCore;\n  namespace = 'hts';\n\n  constructor(params: BaseHederaTransactionToolParams) {\n    super(params);\n  }\n\n  protected getServiceBuilder(): BaseServiceBuilder {\n    return this.hederaKit.hts();\n  }\n\n  protected async callBuilderMethod(\n    builder: BaseServiceBuilder,\n    specificArgs: z.infer<typeof FreezeTokenAccountZodSchemaCore>\n  ): Promise<void> {\n    await (builder as HtsBuilder).freezeTokenAccount(\n      specificArgs as unknown as FreezeTokenAccountParams\n    );\n  }\n}\n"],"names":[],"mappings":";;AASA,MAAM,kCAAkC,EAAE,OAAO;AAAA,EAC/C,SAAS,EAAE,SAAS,SAAS,yCAAyC;AAAA,EACtE,WAAW,EACR,OAAA,EACA,SAAS,+DAA+D;AAC7E,CAAC;AAEM,MAAM,qCAAqC,0BAEhD;AAAA,EAMA,YAAY,QAAyC;AACnD,UAAM,MAAM;AANd,SAAA,OAAO;AACP,SAAA,cAAc;AACd,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMF,oBAAwC;AAChD,WAAO,KAAK,UAAU,IAAA;AAAA,EAAI;AAAA,EAG5B,MAAgB,kBACd,SACA,cACe;AACf,UAAO,QAAuB;AAAA,MAC5B;AAAA,IAAA;AAAA,EACF;AAEJ;"}