{"version":3,"file":"index17.js","sources":["../../src/langchain/tools/account/delete-nft-allowance-all-serials-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaTransactionTool,\n  BaseHederaTransactionToolParams,\n} from '../common/base-hedera-transaction-tool';\nimport { AccountBuilder } from '../../../builders/account/account-builder';\nimport { BaseServiceBuilder } from '../../../builders/base-service-builder';\n\nconst DeleteNftSerialAllowancesZodSchemaCore = z.object({\n  ownerAccountId: z\n    .string()\n    .optional()\n    .describe(\n      'Optional. The ID of the NFT owner. Defaults to the operator/signer if not provided.'\n    ),\n  nftIdString: z\n    .string()\n    .describe(\n      'The specific NFT ID including serial number (e.g., \"0.0.token.serial\") for which all spender allowances will be deleted.'\n    ),\n  memo: z.string().optional().describe('Optional. Memo for the transaction.'),\n});\n\nexport class HederaDeleteNftSerialAllowancesTool extends BaseHederaTransactionTool<\n  typeof DeleteNftSerialAllowancesZodSchemaCore\n> {\n  name = 'hedera-account-delete-nft-serial-allowances-for-all-spenders';\n  description =\n    'Deletes all allowances for a specific NFT serial (for all spenders), granted by an owner. This action must be signed by the NFT owner.';\n  specificInputSchema = DeleteNftSerialAllowancesZodSchemaCore;\n  namespace = 'account';\n\n  constructor(params: BaseHederaTransactionToolParams) {\n    super(params);\n  }\n\n  protected getServiceBuilder(): BaseServiceBuilder {\n    return this.hederaKit.accounts();\n  }\n\n  protected async callBuilderMethod(\n    builder: BaseServiceBuilder,\n    specificArgs: z.infer<typeof DeleteNftSerialAllowancesZodSchemaCore>\n  ): Promise<void> {\n    // Note: Type cast necessary due to interface mismatch between Zod schema and builder params\n    await (builder as AccountBuilder).deleteNftSerialAllowancesForAllSpenders(\n      specificArgs as unknown as Parameters<AccountBuilder['deleteNftSerialAllowancesForAllSpenders']>[0]\n    );\n  }\n}\n"],"names":[],"mappings":";;AAQA,MAAM,yCAAyC,EAAE,OAAO;AAAA,EACtD,gBAAgB,EACb,SACA,WACA;AAAA,IACC;AAAA,EAAA;AAAA,EAEJ,aAAa,EACV,OAAA,EACA;AAAA,IACC;AAAA,EAAA;AAAA,EAEJ,MAAM,EAAE,OAAA,EAAS,SAAA,EAAW,SAAS,qCAAqC;AAC5E,CAAC;AAEM,MAAM,4CAA4C,0BAEvD;AAAA,EAOA,YAAY,QAAyC;AACnD,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMF,oBAAwC;AAChD,WAAO,KAAK,UAAU,SAAA;AAAA,EAAS;AAAA,EAGjC,MAAgB,kBACd,SACA,cACe;AAEf,UAAO,QAA2B;AAAA,MAChC;AAAA,IAAA;AAAA,EACF;AAEJ;"}