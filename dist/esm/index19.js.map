{"version":3,"file":"index19.js","sources":["../../src/langchain/tools/account/get-pending-airdrops-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetPendingAirdropsZodSchema = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID that received the airdrops (e.g., \"0.0.123\")'),\n  limit: z\n    .number()\n    .optional()\n    .describe('Maximum number of airdrops to return'),\n  order: z\n    .enum(['asc', 'desc'])\n    .optional()\n    .describe('Order of results'),\n  senderId: z\n    .string()\n    .optional()\n    .describe('Filter by sender account ID'),\n  serialNumber: z\n    .string()\n    .optional()\n    .describe('Filter by NFT serial number'),\n  tokenId: z\n    .string()\n    .optional()\n    .describe('Filter by token ID'),\n});\n\n/**\n * Tool for retrieving pending token airdrops received by an account.\n */\nexport class HederaGetPendingAirdropsTool extends BaseHederaQueryTool<\n  typeof GetPendingAirdropsZodSchema\n> {\n  name = 'hedera-get-pending-airdrops';\n  description =\n    'Retrieves pending token airdrops that have been received by an account but not yet claimed.';\n  specificInputSchema = GetPendingAirdropsZodSchema;\n  namespace = 'account';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetPendingAirdropsZodSchema>\n  ): Promise<unknown> {\n    this.logger.info(`Getting pending airdrops for account: ${args.accountId}`);\n\n    const airdrops = await this.hederaKit\n      .query()\n      .getPendingTokenAirdrops(args);\n\n    if (!airdrops) {\n      return {\n        success: false,\n        error: `Could not retrieve pending airdrops for account ${args.accountId}`,\n      };\n    }\n\n    return {\n      success: true,\n      accountId: args.accountId,\n      airdrops,\n      count: airdrops.length,\n    };\n  }\n} \n "],"names":[],"mappings":";;AAMA,MAAM,8BAA8B,EAAE,OAAO;AAAA,EAC3C,WAAW,EACR,SACA,SAAS,6DAA6D;AAAA,EACzE,OAAO,EACJ,OAAA,EACA,SAAA,EACA,SAAS,sCAAsC;AAAA,EAClD,OAAO,EACJ,KAAK,CAAC,OAAO,MAAM,CAAC,EACpB,SAAA,EACA,SAAS,kBAAkB;AAAA,EAC9B,UAAU,EACP,OAAA,EACA,SAAA,EACA,SAAS,6BAA6B;AAAA,EACzC,cAAc,EACX,OAAA,EACA,SAAA,EACA,SAAS,6BAA6B;AAAA,EACzC,SAAS,EACN,OAAA,EACA,SAAA,EACA,SAAS,oBAAoB;AAClC,CAAC;AAKM,MAAM,qCAAqC,oBAEhD;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO,KAAK,yCAAyC,KAAK,SAAS,EAAE;AAE1E,UAAM,WAAW,MAAM,KAAK,UACzB,MAAA,EACA,wBAAwB,IAAI;AAE/B,QAAI,CAAC,UAAU;AACb,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO,mDAAmD,KAAK,SAAS;AAAA,MAAA;AAAA,IAC1E;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,KAAK;AAAA,MAChB;AAAA,MACA,OAAO,SAAS;AAAA,IAAA;AAAA,EAClB;AAEJ;"}