{"version":3,"file":"index63.js","sources":["../../src/langchain/tools/scs/get-contracts-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetContractsZodSchema = z.object({\n  contractId: z.string().optional().describe('Filter by specific contract ID'),\n  limit: z\n    .number()\n    .optional()\n    .describe('Maximum number of contracts to return'),\n  order: z.enum(['asc', 'desc']).optional().describe('Order of results'),\n});\n\n/**\n * Tool for retrieving contract entities from the network.\n */\nexport class HederaGetContractsTool extends BaseHederaQueryTool<\n  typeof GetContractsZodSchema\n> {\n  name = 'hedera-get-contracts';\n  description =\n    'Retrieves contract entities from the Hedera network with optional filtering.';\n  specificInputSchema = GetContractsZodSchema;\n  namespace = 'scs';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetContractsZodSchema>\n  ): Promise<unknown> {\n    this.logger.info('Getting contracts from the network');\n\n    const contracts = await this.hederaKit.query().getContracts(args);\n\n    if (contracts === null) {\n      return {\n        success: false,\n        error: 'Could not retrieve contracts from the network',\n      };\n    }\n\n    return {\n      success: true,\n      contracts,\n      count: contracts.length,\n    };\n  }\n}\n"],"names":[],"mappings":";;AAMA,MAAM,wBAAwB,EAAE,OAAO;AAAA,EACrC,YAAY,EAAE,OAAA,EAAS,SAAA,EAAW,SAAS,gCAAgC;AAAA,EAC3E,OAAO,EACJ,OAAA,EACA,SAAA,EACA,SAAS,uCAAuC;AAAA,EACnD,OAAO,EAAE,KAAK,CAAC,OAAO,MAAM,CAAC,EAAE,WAAW,SAAS,kBAAkB;AACvE,CAAC;AAKM,MAAM,+BAA+B,oBAE1C;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO,KAAK,oCAAoC;AAErD,UAAM,YAAY,MAAM,KAAK,UAAU,MAAA,EAAQ,aAAa,IAAI;AAEhE,QAAI,cAAc,MAAM;AACtB,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO;AAAA,MAAA;AAAA,IACT;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT;AAAA,MACA,OAAO,UAAU;AAAA,IAAA;AAAA,EACnB;AAEJ;"}