{"version":3,"file":"index58.js","sources":["../../src/langchain/tools/hts/validate-nft-ownership-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst ValidateNftOwnershipZodSchema = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID to check ownership for (e.g., \"0.0.12345\")'),\n  tokenId: z\n    .string()\n    .describe('The NFT token ID (e.g., \"0.0.67890\")'),\n  serialNumber: z\n    .number()\n    .int()\n    .positive()\n    .describe('The serial number of the NFT'),\n});\n\n/**\n * Tool for validating NFT ownership on Hedera.\n * This is a read-only operation that queries the mirror node.\n */\nexport class HederaValidateNftOwnershipTool extends BaseHederaQueryTool<\n  typeof ValidateNftOwnershipZodSchema\n> {\n  name = 'hedera-validate-nft-ownership';\n  description =\n    'Validates whether a specific account owns a particular NFT by token ID and serial number.';\n  specificInputSchema = ValidateNftOwnershipZodSchema;\n  namespace = 'hts';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof ValidateNftOwnershipZodSchema>\n  ): Promise<unknown> {\n    this.logger.info(\n      `Validating NFT ownership: account ${args.accountId}, token ${args.tokenId}, serial ${args.serialNumber}`\n    );\n    \n    const nftDetail = await this.hederaKit.query().validateNftOwnership(\n      args.accountId,\n      args.tokenId,\n      args.serialNumber\n    );\n    \n    const isOwned = nftDetail !== null;\n\n    return {\n      success: true,\n      accountId: args.accountId,\n      tokenId: args.tokenId,\n      serialNumber: args.serialNumber,\n      isOwned,\n      nftDetail: isOwned ? nftDetail : null,\n    };\n  }\n} \n "],"names":[],"mappings":";;AAMA,MAAM,gCAAgC,EAAE,OAAO;AAAA,EAC7C,WAAW,EACR,SACA,SAAS,2DAA2D;AAAA,EACvE,SAAS,EACN,SACA,SAAS,sCAAsC;AAAA,EAClD,cAAc,EACX,OAAA,EACA,MACA,SAAA,EACA,SAAS,8BAA8B;AAC5C,CAAC;AAMM,MAAM,uCAAuC,oBAElD;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO;AAAA,MACV,qCAAqC,KAAK,SAAS,WAAW,KAAK,OAAO,YAAY,KAAK,YAAY;AAAA,IAAA;AAGzG,UAAM,YAAY,MAAM,KAAK,UAAU,QAAQ;AAAA,MAC7C,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAGP,UAAM,UAAU,cAAc;AAE9B,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,SAAS,KAAK;AAAA,MACd,cAAc,KAAK;AAAA,MACnB;AAAA,MACA,WAAW,UAAU,YAAY;AAAA,IAAA;AAAA,EACnC;AAEJ;"}