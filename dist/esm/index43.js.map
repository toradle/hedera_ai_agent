{"version":3,"file":"index43.js","sources":["../../src/langchain/tools/hts/dissociate-tokens-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport { DissociateTokensParams } from '../../../types';\nimport {\n  BaseHederaTransactionTool,\n  BaseHederaTransactionToolParams,\n} from '../common/base-hedera-transaction-tool';\nimport { BaseServiceBuilder } from '../../../builders/base-service-builder';\nimport { HtsBuilder } from '../../../builders/hts/hts-builder';\n\nconst DissociateTokensZodSchemaCore = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID to dissociate tokens from (e.g., \"0.0.xxxx\").'),\n  tokenIds: z\n    .array(z.string().describe('A token ID (e.g., \"0.0.yyyy\").'))\n    .min(1)\n    .describe('An array of one or more token IDs to dissociate.'),\n});\n\nexport class HederaDissociateTokensTool extends BaseHederaTransactionTool<\n  typeof DissociateTokensZodSchemaCore\n> {\n  name = 'hedera-hts-dissociate-tokens';\n  description = 'Dissociates one or more Hedera tokens from an account.';\n  specificInputSchema = DissociateTokensZodSchemaCore;\n  namespace = 'hts';\n\n  constructor(params: BaseHederaTransactionToolParams) {\n    super(params);\n  }\n\n  protected getServiceBuilder(): BaseServiceBuilder {\n    return this.hederaKit.hts();\n  }\n\n  protected async callBuilderMethod(\n    builder: BaseServiceBuilder,\n    specificArgs: z.infer<typeof DissociateTokensZodSchemaCore>\n  ): Promise<void> {\n    await (builder as HtsBuilder).dissociateTokens(\n      specificArgs as unknown as DissociateTokensParams\n    );\n  }\n}\n"],"names":[],"mappings":";;AASA,MAAM,gCAAgC,EAAE,OAAO;AAAA,EAC7C,WAAW,EACR,SACA,SAAS,8DAA8D;AAAA,EAC1E,UAAU,EACP,MAAM,EAAE,SAAS,SAAS,gCAAgC,CAAC,EAC3D,IAAI,CAAC,EACL,SAAS,kDAAkD;AAChE,CAAC;AAEM,MAAM,mCAAmC,0BAE9C;AAAA,EAMA,YAAY,QAAyC;AACnD,UAAM,MAAM;AANd,SAAA,OAAO;AACP,SAAA,cAAc;AACd,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMF,oBAAwC;AAChD,WAAO,KAAK,UAAU,IAAA;AAAA,EAAI;AAAA,EAG5B,MAAgB,kBACd,SACA,cACe;AACf,UAAO,QAAuB;AAAA,MAC5B;AAAA,IAAA;AAAA,EACF;AAEJ;"}