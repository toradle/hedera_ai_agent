{"version":3,"file":"index67.js","sources":["../../src/langchain/tools/network/get-network-fees-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetNetworkFeesZodSchema = z.object({\n  timestamp: z\n    .string()\n    .optional()\n    .describe('Optional timestamp for historical fees'),\n});\n\n/**\n * Tool for retrieving network fees.\n */\nexport class HederaGetNetworkFeesTool extends BaseHederaQueryTool<\n  typeof GetNetworkFeesZodSchema\n> {\n  name = 'hedera-get-network-fees';\n  description = 'Retrieves network fees from the Hedera network.';\n  specificInputSchema = GetNetworkFeesZodSchema;\n  namespace = 'network';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetNetworkFeesZodSchema>\n  ): Promise<unknown> {\n    this.logger.info('Getting network fees');\n\n    const networkFees = await this.hederaKit\n      .query()\n      .getNetworkFees(args.timestamp);\n\n    if (networkFees === null) {\n      return {\n        success: false,\n        error: 'Could not retrieve network fees',\n      };\n    }\n\n    return {\n      success: true,\n      networkFees,\n    };\n  }\n}\n"],"names":[],"mappings":";;AAMA,MAAM,0BAA0B,EAAE,OAAO;AAAA,EACvC,WAAW,EACR,OAAA,EACA,SAAA,EACA,SAAS,wCAAwC;AACtD,CAAC;AAKM,MAAM,iCAAiC,oBAE5C;AAAA,EAMA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AANd,SAAA,OAAO;AACP,SAAA,cAAc;AACd,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO,KAAK,sBAAsB;AAEvC,UAAM,cAAc,MAAM,KAAK,UAC5B,QACA,eAAe,KAAK,SAAS;AAEhC,QAAI,gBAAgB,MAAM;AACxB,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO;AAAA,MAAA;AAAA,IACT;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT;AAAA,IAAA;AAAA,EACF;AAEJ;"}