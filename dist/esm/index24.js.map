{"version":3,"file":"index24.js","sources":["../../src/langchain/tools/account/get-account-tokens-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetAccountTokensZodSchema = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID to get token balances for (e.g., \"0.0.12345\")'),\n  limit: z\n    .number()\n    .int()\n    .positive()\n    .optional()\n    .default(100)\n    .describe('Maximum number of tokens to return (default: 100)'),\n});\n\n/**\n * Tool for retrieving token balances for a Hedera account.\n * This is a read-only operation that queries the mirror node.\n */\nexport class HederaGetAccountTokensTool extends BaseHederaQueryTool<\n  typeof GetAccountTokensZodSchema\n> {\n  name = 'hedera-get-account-tokens';\n  description =\n    'Retrieves all token balances for a Hedera account. Returns fungible and non-fungible token associations.';\n  specificInputSchema = GetAccountTokensZodSchema;\n  namespace = 'account';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetAccountTokensZodSchema>\n  ): Promise<unknown> {\n    this.logger.info(`Getting tokens for account ID: ${args.accountId}`);\n    \n    const tokens = await this.hederaKit.query().getAccountTokens(args.accountId, args.limit);\n    \n    if (!tokens) {\n      return {\n        success: false,\n        error: `Could not retrieve tokens for account ${args.accountId}`,\n      };\n    }\n\n    return {\n      success: true,\n      accountId: args.accountId,\n      tokenCount: tokens.length,\n      tokens,\n    };\n  }\n} \n "],"names":[],"mappings":";;AAMA,MAAM,4BAA4B,EAAE,OAAO;AAAA,EACzC,WAAW,EACR,SACA,SAAS,8DAA8D;AAAA,EAC1E,OAAO,EACJ,OAAA,EACA,MACA,WACA,SAAA,EACA,QAAQ,GAAG,EACX,SAAS,mDAAmD;AACjE,CAAC;AAMM,MAAM,mCAAmC,oBAE9C;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO,KAAK,kCAAkC,KAAK,SAAS,EAAE;AAEnE,UAAM,SAAS,MAAM,KAAK,UAAU,MAAA,EAAQ,iBAAiB,KAAK,WAAW,KAAK,KAAK;AAEvF,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO,yCAAyC,KAAK,SAAS;AAAA,MAAA;AAAA,IAChE;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,YAAY,OAAO;AAAA,MACnB;AAAA,IAAA;AAAA,EACF;AAEJ;"}