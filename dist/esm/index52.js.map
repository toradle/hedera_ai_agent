{"version":3,"file":"index52.js","sources":["../../src/langchain/tools/hts/token-fee-schedule-update-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport { TokenFeeScheduleUpdateParams } from '../../../types';\nimport {\n  BaseHederaTransactionTool,\n  BaseHederaTransactionToolParams,\n} from '../common/base-hedera-transaction-tool';\nimport { BaseServiceBuilder } from '../../../builders/base-service-builder';\nimport { HtsBuilder } from '../../../builders/hts/hts-builder';\n\nconst FEE_COLLECTOR_DESCRIPTION = \"Fee collector's account ID.\";\n\n/**\n * Zod schema for a fixed fee input object.\n */\nconst FixedFeeInputSchema = z.object({\n  type: z.literal('FIXED'),\n  feeCollectorAccountId: z.string().describe(FEE_COLLECTOR_DESCRIPTION),\n  denominatingTokenId: z\n    .string()\n    .optional()\n    .describe('Denominating token ID for the fee (if not HBAR).'),\n  amount: z\n    .union([z.number(), z.string()])\n    .describe('Fee amount (smallest unit for tokens, or tinybars for HBAR).'),\n});\n\n/**\n * Zod schema for a fractional fee input object.\n */\nconst FractionalFeeInputSchema = z.object({\n  type: z.literal('FRACTIONAL'),\n  feeCollectorAccountId: z.string().describe(FEE_COLLECTOR_DESCRIPTION),\n  numerator: z.number().int().describe('Numerator of the fractional fee.'),\n  denominator: z\n    .number()\n    .int()\n    .positive()\n    .describe('Denominator of the fractional fee.'),\n  assessmentMethodInclusive: z\n    .boolean()\n    .optional()\n    .describe('Fee is assessed on net amount (false) or gross (true).'),\n});\n\n/**\n * Zod schema for a royalty fee input object.\n */\nconst RoyaltyFeeInputSchema = z.object({\n  type: z.literal('ROYALTY'),\n  feeCollectorAccountId: z.string().describe(FEE_COLLECTOR_DESCRIPTION),\n  numerator: z.number().int().describe('Numerator of the royalty fee.'),\n  denominator: z\n    .number()\n    .int()\n    .positive()\n    .describe('Denominator of the royalty fee.'),\n  fallbackFee: FixedFeeInputSchema.omit({ type: true })\n    .optional()\n    .describe('Fallback fixed fee if royalty is not applicable.'),\n});\n\n/**\n * Zod schema for a discriminated union of custom fee input types.\n */\nconst CustomFeeInputUnionSchema = z.discriminatedUnion('type', [\n  FixedFeeInputSchema,\n  FractionalFeeInputSchema,\n  RoyaltyFeeInputSchema,\n]);\n\nconst TokenFeeScheduleUpdateZodSchemaCore = z.object({\n  tokenId: z\n    .string()\n    .describe(\n      'The ID of the token whose fee schedule is to be updated (e.g., \"0.0.xxxx\").'\n    ),\n  customFees: z\n    .array(CustomFeeInputUnionSchema)\n    .min(1)\n    .describe(\n      'An array of new custom fee objects. This will replace the existing fee schedule.'\n    ),\n});\n\nexport class HederaTokenFeeScheduleUpdateTool extends BaseHederaTransactionTool<\n  typeof TokenFeeScheduleUpdateZodSchemaCore\n> {\n  name = 'hedera-hts-token-fee-schedule-update';\n  description =\n    'Updates the fee schedule of a token. Requires tokenId and an array of custom fee objects.';\n  specificInputSchema = TokenFeeScheduleUpdateZodSchemaCore;\n  namespace = 'hts';\n\n  constructor(params: BaseHederaTransactionToolParams) {\n    super(params);\n  }\n\n  protected getServiceBuilder(): BaseServiceBuilder {\n    return this.hederaKit.hts();\n  }\n\n  protected async callBuilderMethod(\n    builder: BaseServiceBuilder,\n    specificArgs: z.infer<typeof TokenFeeScheduleUpdateZodSchemaCore>\n  ): Promise<void> {\n    await (builder as HtsBuilder).feeScheduleUpdate(\n      specificArgs as unknown as TokenFeeScheduleUpdateParams\n    );\n  }\n}\n"],"names":[],"mappings":";;AASA,MAAM,4BAA4B;AAKlC,MAAM,sBAAsB,EAAE,OAAO;AAAA,EACnC,MAAM,EAAE,QAAQ,OAAO;AAAA,EACvB,uBAAuB,EAAE,SAAS,SAAS,yBAAyB;AAAA,EACpE,qBAAqB,EAClB,OAAA,EACA,SAAA,EACA,SAAS,kDAAkD;AAAA,EAC9D,QAAQ,EACL,MAAM,CAAC,EAAE,UAAU,EAAE,OAAA,CAAQ,CAAC,EAC9B,SAAS,8DAA8D;AAC5E,CAAC;AAKD,MAAM,2BAA2B,EAAE,OAAO;AAAA,EACxC,MAAM,EAAE,QAAQ,YAAY;AAAA,EAC5B,uBAAuB,EAAE,SAAS,SAAS,yBAAyB;AAAA,EACpE,WAAW,EAAE,OAAA,EAAS,IAAA,EAAM,SAAS,kCAAkC;AAAA,EACvE,aAAa,EACV,SACA,MACA,SAAA,EACA,SAAS,oCAAoC;AAAA,EAChD,2BAA2B,EACxB,QAAA,EACA,SAAA,EACA,SAAS,wDAAwD;AACtE,CAAC;AAKD,MAAM,wBAAwB,EAAE,OAAO;AAAA,EACrC,MAAM,EAAE,QAAQ,SAAS;AAAA,EACzB,uBAAuB,EAAE,SAAS,SAAS,yBAAyB;AAAA,EACpE,WAAW,EAAE,OAAA,EAAS,IAAA,EAAM,SAAS,+BAA+B;AAAA,EACpE,aAAa,EACV,SACA,MACA,SAAA,EACA,SAAS,iCAAiC;AAAA,EAC7C,aAAa,oBAAoB,KAAK,EAAE,MAAM,KAAA,CAAM,EACjD,WACA,SAAS,kDAAkD;AAChE,CAAC;AAKD,MAAM,4BAA4B,EAAE,mBAAmB,QAAQ;AAAA,EAC7D;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAED,MAAM,sCAAsC,EAAE,OAAO;AAAA,EACnD,SAAS,EACN,OAAA,EACA;AAAA,IACC;AAAA,EAAA;AAAA,EAEJ,YAAY,EACT,MAAM,yBAAyB,EAC/B,IAAI,CAAC,EACL;AAAA,IACC;AAAA,EAAA;AAEN,CAAC;AAEM,MAAM,yCAAyC,0BAEpD;AAAA,EAOA,YAAY,QAAyC;AACnD,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMF,oBAAwC;AAChD,WAAO,KAAK,UAAU,IAAA;AAAA,EAAI;AAAA,EAG5B,MAAgB,kBACd,SACA,cACe;AACf,UAAO,QAAuB;AAAA,MAC5B;AAAA,IAAA;AAAA,EACF;AAEJ;"}