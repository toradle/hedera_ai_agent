{"version":3,"file":"index23.js","sources":["../../src/langchain/tools/account/get-account-public-key-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetAccountPublicKeyZodSchema = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID to get the public key for (e.g., \"0.0.12345\")'),\n});\n\n/**\n * Tool for retrieving a Hedera account's public key.\n * This is a read-only operation that queries the mirror node.\n */\nexport class HederaGetAccountPublicKeyTool extends BaseHederaQueryTool<\n  typeof GetAccountPublicKeyZodSchema\n> {\n  name = 'hedera-get-account-public-key';\n  description =\n    'Retrieves the public key for a Hedera account. Returns the public key in string format.';\n  specificInputSchema = GetAccountPublicKeyZodSchema;\n  namespace = 'account';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetAccountPublicKeyZodSchema>\n  ): Promise<unknown> {\n    this.logger.info(`Getting public key for account ID: ${args.accountId}`);\n    \n    const publicKey = await this.hederaKit.query().getPublicKey(args.accountId);\n    \n    if (!publicKey) {\n      return {\n        success: false,\n        error: `Could not retrieve public key for account ${args.accountId}`,\n      };\n    }\n\n    return {\n      success: true,\n      accountId: args.accountId,\n      publicKey: publicKey.toString(),\n      publicKeyDer: publicKey.toStringDer(),\n      publicKeyRaw: publicKey.toStringRaw(),\n    };\n  }\n} \n "],"names":[],"mappings":";;AAMA,MAAM,+BAA+B,EAAE,OAAO;AAAA,EAC5C,WAAW,EACR,OAAA,EACA,SAAS,8DAA8D;AAC5E,CAAC;AAMM,MAAM,sCAAsC,oBAEjD;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO,KAAK,sCAAsC,KAAK,SAAS,EAAE;AAEvE,UAAM,YAAY,MAAM,KAAK,UAAU,QAAQ,aAAa,KAAK,SAAS;AAE1E,QAAI,CAAC,WAAW;AACd,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO,6CAA6C,KAAK,SAAS;AAAA,MAAA;AAAA,IACpE;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,WAAW,UAAU,SAAA;AAAA,MACrB,cAAc,UAAU,YAAA;AAAA,MACxB,cAAc,UAAU,YAAA;AAAA,IAAY;AAAA,EACtC;AAEJ;"}