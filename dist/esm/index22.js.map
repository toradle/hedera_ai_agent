{"version":3,"file":"index22.js","sources":["../../src/langchain/tools/account/get-account-nfts-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetAccountNftsZodSchema = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID to get NFTs for (e.g., \"0.0.12345\")'),\n  tokenId: z\n    .string()\n    .optional()\n    .describe('Optional token ID to filter NFTs by (e.g., \"0.0.67890\")'),\n  limit: z\n    .number()\n    .int()\n    .positive()\n    .optional()\n    .default(100)\n    .describe('Maximum number of NFTs to return (default: 100)'),\n});\n\n/**\n * Tool for retrieving NFTs owned by a Hedera account.\n * This is a read-only operation that queries the mirror node.\n */\nexport class HederaGetAccountNftsTool extends BaseHederaQueryTool<\n  typeof GetAccountNftsZodSchema\n> {\n  name = 'hedera-get-account-nfts';\n  description =\n    'Retrieves all NFTs owned by a Hedera account. Optionally filter by token ID.';\n  specificInputSchema = GetAccountNftsZodSchema;\n  namespace = 'account';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetAccountNftsZodSchema>\n  ): Promise<unknown> {\n    this.logger.info(`Getting NFTs for account ID: ${args.accountId}`);\n    \n    const nfts = await this.hederaKit.query().getAccountNfts(\n      args.accountId,\n      args.tokenId,\n      args.limit\n    );\n    \n    if (!nfts) {\n      return {\n        success: false,\n        error: `Could not retrieve NFTs for account ${args.accountId}`,\n      };\n    }\n\n    return {\n      success: true,\n      accountId: args.accountId,\n      tokenId: args.tokenId,\n      nftCount: nfts.length,\n      nfts,\n    };\n  }\n} \n "],"names":[],"mappings":";;AAMA,MAAM,0BAA0B,EAAE,OAAO;AAAA,EACvC,WAAW,EACR,SACA,SAAS,oDAAoD;AAAA,EAChE,SAAS,EACN,OAAA,EACA,SAAA,EACA,SAAS,yDAAyD;AAAA,EACrE,OAAO,EACJ,OAAA,EACA,MACA,WACA,SAAA,EACA,QAAQ,GAAG,EACX,SAAS,iDAAiD;AAC/D,CAAC;AAMM,MAAM,iCAAiC,oBAE5C;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO,KAAK,gCAAgC,KAAK,SAAS,EAAE;AAEjE,UAAM,OAAO,MAAM,KAAK,UAAU,QAAQ;AAAA,MACxC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAGP,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO,uCAAuC,KAAK,SAAS;AAAA,MAAA;AAAA,IAC9D;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,SAAS,KAAK;AAAA,MACd,UAAU,KAAK;AAAA,MACf;AAAA,IAAA;AAAA,EACF;AAEJ;"}