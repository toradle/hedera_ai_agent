{"version":3,"file":"index21.js","sources":["../../src/langchain/tools/account/get-account-info-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetAccountInfoZodSchema = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID to get information for (e.g., \"0.0.12345\")'),\n});\n\n/**\n * Tool for retrieving full Hedera account information.\n * This is a read-only operation that queries the mirror node.\n */\nexport class HederaGetAccountInfoTool extends BaseHederaQueryTool<\n  typeof GetAccountInfoZodSchema\n> {\n  name = 'hedera-get-account-info';\n  description =\n    'Retrieves comprehensive information about a Hedera account including balance, key, memo, and other metadata.';\n  specificInputSchema = GetAccountInfoZodSchema;\n  namespace = 'account';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetAccountInfoZodSchema>\n  ): Promise<unknown> {\n    this.logger.info(`Getting account info for account ID: ${args.accountId}`);\n\n    const accountInfo = await this.hederaKit\n      .query()\n      .getAccountInfo(args.accountId);\n\n    if (!accountInfo) {\n      return {\n        success: false,\n        error: `Account ${args.accountId} not found`,\n      };\n    }\n\n    return {\n      success: true,\n      accountInfo,\n    };\n  }\n}\n"],"names":[],"mappings":";;AAMA,MAAM,0BAA0B,EAAE,OAAO;AAAA,EACvC,WAAW,EACR,OAAA,EACA,SAAS,2DAA2D;AACzE,CAAC;AAMM,MAAM,iCAAiC,oBAE5C;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO,KAAK,wCAAwC,KAAK,SAAS,EAAE;AAEzE,UAAM,cAAc,MAAM,KAAK,UAC5B,QACA,eAAe,KAAK,SAAS;AAEhC,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO,WAAW,KAAK,SAAS;AAAA,MAAA;AAAA,IAClC;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT;AAAA,IAAA;AAAA,EACF;AAEJ;"}