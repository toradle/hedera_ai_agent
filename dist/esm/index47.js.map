{"version":3,"file":"index47.js","sources":["../../src/langchain/tools/hts/mint-fungible-token-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport { MintFTParams } from '../../../types';\nimport {\n  BaseHederaTransactionTool,\n  BaseHederaTransactionToolParams,\n} from '../common/base-hedera-transaction-tool';\nimport { BaseServiceBuilder } from '../../../builders/base-service-builder';\nimport { HtsBuilder } from '../../../builders/hts/hts-builder';\n\nconst MintFTZodSchemaCore = z.object({\n  tokenId: z\n    .string()\n    .describe('The ID of the fungible token (e.g., \"0.0.xxxx\").'),\n  amount: z\n    .union([z.number(), z.string()])\n    .describe(\n      'Amount to mint (smallest unit). Number or string for large values. Builder handles conversion.'\n    ),\n});\n\nexport class HederaMintFungibleTokenTool extends BaseHederaTransactionTool<\n  typeof MintFTZodSchemaCore\n> {\n  name = 'hedera-hts-mint-fungible-token';\n  description = 'Mints more fungible tokens. Requires tokenId and amount.';\n  specificInputSchema = MintFTZodSchemaCore;\n  namespace = 'hts';\n\n  constructor(params: BaseHederaTransactionToolParams) {\n    super(params);\n  }\n\n  protected getServiceBuilder(): BaseServiceBuilder {\n    return this.hederaKit.hts();\n  }\n\n  protected async callBuilderMethod(\n    builder: BaseServiceBuilder,\n    specificArgs: z.infer<typeof MintFTZodSchemaCore>\n  ): Promise<void> {\n    await (builder as HtsBuilder).mintFungibleToken(\n      specificArgs as unknown as MintFTParams\n    );\n  }\n}\n"],"names":[],"mappings":";;AASA,MAAM,sBAAsB,EAAE,OAAO;AAAA,EACnC,SAAS,EACN,SACA,SAAS,kDAAkD;AAAA,EAC9D,QAAQ,EACL,MAAM,CAAC,EAAE,OAAA,GAAU,EAAE,QAAQ,CAAC,EAC9B;AAAA,IACC;AAAA,EAAA;AAEN,CAAC;AAEM,MAAM,oCAAoC,0BAE/C;AAAA,EAMA,YAAY,QAAyC;AACnD,UAAM,MAAM;AANd,SAAA,OAAO;AACP,SAAA,cAAc;AACd,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMF,oBAAwC;AAChD,WAAO,KAAK,UAAU,IAAA;AAAA,EAAI;AAAA,EAG5B,MAAgB,kBACd,SACA,cACe;AACf,UAAO,QAAuB;AAAA,MAC5B;AAAA,IAAA;AAAA,EACF;AAEJ;"}