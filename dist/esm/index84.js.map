{"version":3,"file":"index84.js","sources":["../../src/plugins/BasePlugin.ts"],"sourcesContent":["import { IPlugin, BasePluginContext, HederaTool } from './PluginInterface';\n\n/**\n * Base class for plugins to simplify implementation\n */\nexport abstract class BasePlugin<T extends BasePluginContext = BasePluginContext> implements IPlugin<T> {\n  abstract id: string;\n  abstract name: string;\n  abstract description: string;\n  abstract version: string;\n  abstract author: string;\n\n  protected context!: T;\n\n  /**\n   * Initialize the plugin with the provided context\n   * @param context The context containing shared resources\n   */\n  async initialize(context: T): Promise<void> {\n    this.context = context;\n  }\n\n  /**\n   * Get the tools provided by this plugin\n   * @returns Array of tools provided by this plugin\n   */\n  abstract getTools(): HederaTool[];\n\n  /**\n   * Clean up resources when the plugin is unloaded\n   * Default implementation does nothing\n   */\n  async cleanup(): Promise<void> {\n\n  }\n}"],"names":[],"mappings":"AAKO,MAAe,WAAkF;AAAA;AAAA;AAAA;AAAA;AAAA,EAatG,MAAM,WAAW,SAA2B;AAC1C,SAAK,UAAU;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAajB,MAAM,UAAyB;AAAA,EAAA;AAGjC;"}