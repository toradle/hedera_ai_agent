{"version":3,"file":"index18.js","sources":["../../src/langchain/tools/account/get-outstanding-airdrops-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport {\n  BaseHederaQueryTool,\n  BaseHederaQueryToolParams,\n} from '../common/base-hedera-query-tool';\n\nconst GetOutstandingAirdropsZodSchema = z.object({\n  accountId: z\n    .string()\n    .describe('The account ID that sent the airdrops (e.g., \"0.0.123\")'),\n  limit: z.number().optional().describe('Maximum number of airdrops to return'),\n  order: z.enum(['asc', 'desc']).optional().describe('Order of results'),\n  receiverId: z.string().optional().describe('Filter by receiver account ID'),\n  serialNumber: z.string().optional().describe('Filter by NFT serial number'),\n  tokenId: z.string().optional().describe('Filter by token ID'),\n});\n\n/**\n * Tool for retrieving outstanding token airdrops sent by an account.\n */\nexport class HederaGetOutstandingAirdropsTool extends BaseHederaQueryTool<\n  typeof GetOutstandingAirdropsZodSchema\n> {\n  name = 'hedera-get-outstanding-airdrops';\n  description =\n    'Retrieves outstanding token airdrops that have been sent by an account but not yet claimed.';\n  specificInputSchema = GetOutstandingAirdropsZodSchema;\n  namespace = 'account';\n\n  constructor(params: BaseHederaQueryToolParams) {\n    super(params);\n  }\n\n  protected async executeQuery(\n    args: z.infer<typeof GetOutstandingAirdropsZodSchema>\n  ): Promise<unknown> {\n    this.logger.info(\n      `Getting outstanding airdrops for account: ${args.accountId}`\n    );\n\n    const airdrops = await this.hederaKit\n      .query()\n      .getOutstandingTokenAirdrops(args);\n\n    if (airdrops === null) {\n      return {\n        success: false,\n        error: `Could not retrieve outstanding airdrops for account ${args.accountId}`,\n      };\n    }\n\n    return {\n      success: true,\n      accountId: args.accountId,\n      airdrops,\n      count: airdrops.length,\n    };\n  }\n}\n\n "],"names":[],"mappings":";;AAMA,MAAM,kCAAkC,EAAE,OAAO;AAAA,EAC/C,WAAW,EACR,SACA,SAAS,yDAAyD;AAAA,EACrE,OAAO,EAAE,OAAA,EAAS,SAAA,EAAW,SAAS,sCAAsC;AAAA,EAC5E,OAAO,EAAE,KAAK,CAAC,OAAO,MAAM,CAAC,EAAE,SAAA,EAAW,SAAS,kBAAkB;AAAA,EACrE,YAAY,EAAE,OAAA,EAAS,SAAA,EAAW,SAAS,+BAA+B;AAAA,EAC1E,cAAc,EAAE,OAAA,EAAS,SAAA,EAAW,SAAS,6BAA6B;AAAA,EAC1E,SAAS,EAAE,OAAA,EAAS,SAAA,EAAW,SAAS,oBAAoB;AAC9D,CAAC;AAKM,MAAM,yCAAyC,oBAEpD;AAAA,EAOA,YAAY,QAAmC;AAC7C,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMZ,MAAgB,aACd,MACkB;AAClB,SAAK,OAAO;AAAA,MACV,6CAA6C,KAAK,SAAS;AAAA,IAAA;AAG7D,UAAM,WAAW,MAAM,KAAK,UACzB,MAAA,EACA,4BAA4B,IAAI;AAEnC,QAAI,aAAa,MAAM;AACrB,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO,uDAAuD,KAAK,SAAS;AAAA,MAAA;AAAA,IAC9E;AAGF,WAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,KAAK;AAAA,MAChB;AAAA,MACA,OAAO,SAAS;AAAA,IAAA;AAAA,EAClB;AAEJ;"}