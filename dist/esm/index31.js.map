{"version":3,"file":"index31.js","sources":["../../src/langchain/tools/hcs/update-topic-tool.ts"],"sourcesContent":["import { z } from 'zod';\nimport { UpdateTopicParams } from '../../../types';\nimport {\n  BaseHederaTransactionTool,\n  BaseHederaTransactionToolParams,\n} from '../common/base-hedera-transaction-tool';\nimport { HcsBuilder } from '../../../builders/hcs/hcs-builder';\nimport { BaseServiceBuilder } from '../../../builders/base-service-builder';\n\nconst UpdateTopicZodSchemaCore = z.object({\n  topicId: z\n    .string()\n    .describe('The ID of the topic to update (e.g., \"0.0.xxxx\").'),\n  memo: z\n    .string()\n    .nullable()\n    .optional()\n    .describe('Optional. New memo for the topic. Pass null to clear.'),\n  adminKey: z\n    .string()\n    .nullable()\n    .optional()\n    .describe(\n      'Optional. New admin key (serialized string). Pass null to clear.'\n    ),\n  submitKey: z\n    .string()\n    .nullable()\n    .optional()\n    .describe(\n      'Optional. New submit key (serialized string). Pass null to clear.'\n    ),\n  autoRenewPeriod: z\n    .number()\n    .int()\n    .positive()\n    .optional()\n    .describe('Optional. New auto-renewal period in seconds.'),\n  autoRenewAccountId: z\n    .string()\n    .nullable()\n    .optional()\n    .describe('Optional. New auto-renew account ID. Pass null to clear.'),\n  feeScheduleKey: z\n    .string()\n    .nullable()\n    .optional()\n    .describe(\n      'Optional. New fee schedule key (serialized string). Pass null to clear.'\n    ),\n  exemptAccountIds: z\n    .array(z.string())\n    .optional()\n    .describe(\n      'Optional. New list of exempt account IDs. An empty array clears all exemptions.'\n    ),\n});\n\nexport class HederaUpdateTopicTool extends BaseHederaTransactionTool<\n  typeof UpdateTopicZodSchemaCore\n> {\n  name = 'hedera-hcs-update-topic';\n  description =\n    'Updates an HCS topic. Requires topicId. Other fields are optional. Null can be used to clear certain fields.';\n  specificInputSchema = UpdateTopicZodSchemaCore;\n  namespace = 'hcs';\n\n  constructor(params: BaseHederaTransactionToolParams) {\n    super(params);\n  }\n\n  protected getServiceBuilder(): BaseServiceBuilder {\n    return this.hederaKit.hcs();\n  }\n\n  protected async callBuilderMethod(\n    builder: BaseServiceBuilder,\n    specificArgs: z.infer<typeof UpdateTopicZodSchemaCore>\n  ): Promise<void> {\n    await (builder as HcsBuilder).updateTopic(\n      specificArgs as unknown as UpdateTopicParams\n    );\n  }\n}\n"],"names":[],"mappings":";;AASA,MAAM,2BAA2B,EAAE,OAAO;AAAA,EACxC,SAAS,EACN,SACA,SAAS,mDAAmD;AAAA,EAC/D,MAAM,EACH,SACA,WACA,SAAA,EACA,SAAS,uDAAuD;AAAA,EACnE,UAAU,EACP,OAAA,EACA,SAAA,EACA,WACA;AAAA,IACC;AAAA,EAAA;AAAA,EAEJ,WAAW,EACR,OAAA,EACA,SAAA,EACA,WACA;AAAA,IACC;AAAA,EAAA;AAAA,EAEJ,iBAAiB,EACd,OAAA,EACA,IAAA,EACA,SAAA,EACA,SAAA,EACA,SAAS,+CAA+C;AAAA,EAC3D,oBAAoB,EACjB,SACA,WACA,SAAA,EACA,SAAS,0DAA0D;AAAA,EACtE,gBAAgB,EACb,OAAA,EACA,SAAA,EACA,WACA;AAAA,IACC;AAAA,EAAA;AAAA,EAEJ,kBAAkB,EACf,MAAM,EAAE,QAAQ,EAChB,WACA;AAAA,IACC;AAAA,EAAA;AAEN,CAAC;AAEM,MAAM,8BAA8B,0BAEzC;AAAA,EAOA,YAAY,QAAyC;AACnD,UAAM,MAAM;AAPd,SAAA,OAAO;AACP,SAAA,cACE;AACF,SAAA,sBAAsB;AACtB,SAAA,YAAY;AAAA,EAAA;AAAA,EAMF,oBAAwC;AAChD,WAAO,KAAK,UAAU,IAAA;AAAA,EAAI;AAAA,EAG5B,MAAgB,kBACd,SACA,cACe;AACf,UAAO,QAAuB;AAAA,MAC5B;AAAA,IAAA;AAAA,EACF;AAEJ;"}